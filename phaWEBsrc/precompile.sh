# $1 is the directory path to output the java source once compiled from jsp.
#    it is also where the compiled java class files will be placed.
# $2 is the path of a file to output the autogenerated web.xml file to
# $3 is the path to the root of the webapp.
#
# example:
#
# precompile.sh /tmp /tmp/auto-web.xml /usr/local/jakarta-tomcat-4.0.4/webapps/jobreq
#
# or
#
# precompile.sh $CATALINA_HOME/webapps/jobreq/WEB-INF/classes $CATALINA_HOME/webapps/jobreq/WEB-INF/auto-web.xml $CATALINA_HOME/webapps/jobreq
#
# This will create an auto-web.xml file and the compiled .class files.
#
# Copy all the .jsp files into the current working directory.
# Run the precompile.sh script from the current working directory.
# Copy the .class files into the webapps WEB-INF/classes directory.
#
# Or do the above three steps by precompiling the .jsp insitu as the second
# example above illustrates precompiling the jobreq webapp insitu.
#
# Remove the webapps .jsp files, except the index.jsp file if it exists. This 
#   will stop the directory listing being shown.
# Remove any taglib .tld files from the webapps WEB-INF directory.
# Manually merge the web.xml with the auto-web.xml generated by precompile.sh
#   but leave out the index servlet sections if they exist in the auto-web.xml.
# Remove and .java files from the webapps WEB-INF/classes directory, and
#   and sub directories, leaving only the .class files. Also remove the
#   index.class file if it exists.
#

# Compile the JSP into java.
$CATALINA_HOME/bin/jspc.sh -d $1 -webxml $2 -webapp $3

# Add on extra jar files to CLASSPATH
for i in "$CATALINA_HOME"/lib/*.jar; do
  CLASSPATH="$CLASSPATH":"$i"
done
for i in "$CATALINA_HOME"/common/lib/*.jar; do
  CLASSPATH="$CLASSPATH":"$i"
done
for i in "$3"/WEB-INF/lib/*.jar; do
  CLASSPATH="$CLASSPATH":"$i"
done
CLASSPATH="$CLASSPATH":"$3"/WEB-INF/classes
CLASSPATH="$CLASSPATH":"$CATALINA_HOME"/classes

export CLASSPATH

# Place the directories to compile here. This is NOT recursive, any directories
# below a specified one will NOT be compiled, they have to be added as seperate
# lines to explicitly compile them.
javac $1/*.java
javac $1/include/*.java
